#pragma once

#include <Game/Tile.h>

static const int kPieceSize = 4 * 4;
static const int kRotationOffset = 7 * kPieceSize;
static Tile tiles[kRotationOffset * 4]{
    -1,+1,-1,-1,
    +1,+1,+1,-1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,

    -1,+1,+1,-1,
    -1,+1,+1,-1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,

    -1,+1,-1,-1,
    -1,+1,-1,-1,
    -1,+1,+1,-1,
    -1,-1,-1,-1,

    -1,+1,-1,-1,
    -1,+1,-1,-1,
    +1,+1,-1,-1,
    -1,-1,-1,-1,

    +1,+1,-1,-1,
    -1,+1,+1,-1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,

    -1,+1,+1,-1,
    +1,+1,-1,-1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,

    -1,+1,-1,-1,
    -1,+1,-1,-1,
    -1,+1,-1,-1,
    -1,+1,-1,-1,


    -1,+1,-1,-1,
    -1,+1,+1,-1,
    -1,+1,-1,-1,
    -1,-1,-1,-1,

    -1,+1,+1,-1,
    -1,+1,+1,-1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,

    -1,-1,-1,-1,
    +1,+1,+1,-1,
    +1,-1,-1,-1,
    -1,-1,-1,-1,

    +1,-1,-1,-1,
    +1,+1,+1,-1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,

    -1,-1,+1,-1,
    -1,+1,+1,-1,
    -1,+1,-1,-1,
    -1,-1,-1,-1,

    -1,+1,-1,-1,
    -1,+1,+1,-1,
    -1,-1,+1,-1,
    -1,-1,-1,-1,

    -1,-1,-1,-1,
    +1,+1,+1,+1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,


    -1,-1,-1,-1,
    +1,+1,+1,-1,
    -1,+1,-1,-1,
    -1,-1,-1,-1,

    -1,+1,+1,-1,
    -1,+1,+1,-1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,

    +1,+1,-1,-1,
    -1,+1,-1,-1,
    -1,+1,-1,-1,
    -1,-1,-1,-1,

    -1,+1,+1,-1,
    -1,+1,-1,-1,
    -1,+1,-1,-1,
    -1,-1,-1,-1,

    -1,-1,-1,-1,
    +1,+1,-1,-1,
    -1,+1,+1,-1,
    -1,-1,-1,-1,

    -1,-1,-1,-1,
    -1,+1,+1,-1,
    +1,+1,-1,-1,
    -1,-1,-1,-1,

    -1,-1,+1,-1,
    -1,-1,+1,-1,
    -1,-1,+1,-1,
    -1,-1,+1,-1,


    -1,+1,-1,-1,
    +1,+1,-1,-1,
    -1,+1,-1,-1,
    -1,-1,-1,-1,

    -1,+1,+1,-1,
    -1,+1,+1,-1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,

    -1,-1,+1,-1,
    +1,+1,+1,-1,
    -1,-1,-1,-1,
    -1,-1,-1,-1,

    -1,-1,-1,-1,
    +1,+1,+1,-1,
    -1,-1,+1,-1,
    -1,-1,-1,-1,

    -1,+1,-1,-1,
    +1,+1,-1,-1,
    +1,-1,-1,-1,
    -1,-1,-1,-1,

    +1,-1,-1,-1,
    +1,+1,-1,-1,
    -1,+1,-1,-1,
    -1,-1,-1,-1,

    -1,-1,-1,-1,
    -1,-1,-1,-1,
    +1,+1,+1,+1,
    -1,-1,-1,-1,
};
static Connection connections[kRotationOffset * 4]{
    0,2,0,0,
    4,13,1,0,
    0,0,0,0,
    0,0,0,0,

    0,6,3,0,
    0,12,9,0,
    0,0,0,0,
    0,0,0,0,

    0,2,0,0,
    0,10,0,0,
    0,12,1,0,
    0,0,0,0,

    0,2,0,0,
    0,10,0,0,
    4,9,0,0,
    0,0,0,0,

    4,3,0,0,
    0,12,1,0,
    0,0,0,0,
    0,0,0,0,

    0,6,1,0,
    4,9,0,0,
    0,0,0,0,
    0,0,0,0,

    0,2,0,0,
    0,10,0,0,
    0,10,0,0,
    0,8,0,0,


    0,2,0,0,
    0,14,1,0,
    0,8,0,0,
    0,0,0,0,

    0,6,3,0,
    0,12,9,0,
    0,0,0,0,
    0,0,0,0,

    0,0,0,0,
    6,5,1,0,
    8,0,0,0,
    0,0,0,0,

    2,0,0,0,
    12,5,1,0,
    0,0,0,0,
    0,0,0,0,

    0,0,2,0,
    0,6,9,0,
    0,8,0,0,
    0,0,0,0,

    0,2,0,0,
    0,12,3,0,
    0,0,8,0,
    0,0,0,0,

    0,0,0,0,
    4,5,5,1,
    0,0,0,0,
    0,0,0,0,


    0,0,0,0,
    4,7,1,0,
    0,8,0,0,
    0,0,0,0,

    0,6,3,0,
    0,12,9,0,
    0,0,0,0,
    0,0,0,0,

    4,3,0,0,
    0,10,0,0,
    0,8,0,0,
    0,0,0,0,

    0,6,1,0,
    0,10,0,0,
    0,8,0,0,
    0,0,0,0,

    0,0,0,0,
    4,3,0,0,
    0,12,1,0,
    0,0,0,0,

    0,0,0,0,
    0,6,1,0,
    4,9,0,0,
    0,0,0,0,

    0,0,2,0,
    0,0,10,0,
    0,0,10,0,
    0,0,8,0,


    0,2,0,0,
    4,11,0,0,
    0,8,0,0,
    0,0,0,0,

    0,6,3,0,
    0,12,9,0,
    0,0,0,0,
    0,0,0,0,

    0,0,2,0,
    4,5,9,0,
    0,0,0,0,
    0,0,0,0,

    0,0,0,0,
    4,5,3,0,
    0,0,8,0,
    0,0,0,0,

    0,2,0,0,
    6,9,0,0,
    8,0,0,0,
    0,0,0,0,

    2,0,0,0,
    12,3,0,0,
    0,8,0,0,
    0,0,0,0,

    0,0,0,0,
    0,0,0,0,
    4,5,5,1,
    0,0,0,0,
};


struct PieceDefintions {
    static Tile* getPieceTiles(Tile type, int rotation) {             return &tiles      [(type * kPieceSize) + (rotation * kRotationOffset)]; }
    static Connection* getPieceConnections(Tile type, int rotation) { return &connections[(type * kPieceSize) + (rotation * kRotationOffset)]; }
};